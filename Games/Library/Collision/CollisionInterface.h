//__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/
//! @file		CollisionInterface.h
//!
//! @summary	衝突判定用のインターフェイスクラスのヘッダファイル
//!
//! @date		2018.11.30
//!
//! @author		深草直斗
//__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/

// 多重インクルードの防止 =========================================================
#pragma once


// 名前空間の定義 ================================================================
namespace Library
{
	namespace Collision
	{
		// クラスの宣言 ==========================================================
		class CollisionShape;


		// クラスの定義 ==========================================================
		class CollisionInterface
		{
			// <メンバ変数>
		private:


			// <コンストラクタ>
		public:
			//--------------------------------------------------------------
			//! @parameter [void] なし
			//--------------------------------------------------------------
			CollisionInterface();


			// <デストラクタ>
		public:
			virtual ~CollisionInterface();


			// <メンバ関数>
		public:
			//--------------------------------------------------------------
			//! @summary   衝突しているときに呼ばれる処理
			//!
			//! @parameter [collider] 衝突しているコライダー
			//!
			//! @return    なし
			//--------------------------------------------------------------
			virtual void OnCollision(CollisionShape* collider);
		};
	}
}
