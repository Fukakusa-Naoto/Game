//__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/
//! @file		MotionManager.h
//!
//! @summary	モーションデータ管理クラスのヘッダファイル
//!
//! @date		2018.10.26
//!
//! @author		深草直斗
//__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/

// 多重インクルードの防止 =========================================================
#pragma once



// ヘッダファイルの読み込み =======================================================
// <標準ヘッダファイル>
#include <map>

// <自作ヘッダファイル>
#include "../System/SingletonBase.h"
#include "VMDData.h"


// 名前空間の定義 ================================================================
namespace Library
{
	namespace Animation
	{
		// クラスの定義 ==========================================================
		class MotionManager : public System::SingletonBase<MotionManager>
		{
			// <フレンドの登録>
			friend class System::SingletonBase<MotionManager>;


			// <メンバ変数>
		private:
			// モデルデータの保管用コンテナ
			//std::map<const wchar_t*, Model*> m_modelMap;


			// <コンストラクタ>
		private:
			//----------------------------------------------------------
			//! @parameter [void] なし
			//----------------------------------------------------------
			MotionManager();


		public:
			~MotionManager();


			// <メンバ関数>
		public:
			//--------------------------------------------------------------
			//! @summary   VMDのモーションデータの読み込み処理
			//!
			//! @parameter [fileName] 読み込むモーションデータのファイル名
			//!
			//! @return    モーションデータのインスタンス
			//--------------------------------------------------------------
			void LoadMotionDataFromVMD(const wchar_t* fileName);


		private:
			//--------------------------------------------------------------
			//! @summary   ファイルからVMDMotionを生成する
			//!
			//! @parameter [stream] 読み込まれたファイル
			//!
			//! @return    生成されたVMDMotion
			//--------------------------------------------------------------
			VMDMotion* CreateVMDMotion(std::ifstream* stream);
		};
	}
}
