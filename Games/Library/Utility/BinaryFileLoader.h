//__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/
//! @file		BinaryFileLoader.h
//!
//! @summary	バイナリ・ファイルの読み込みに関する処理を記述したヘッダファイル
//!
//! @date		2018.09.18
//!
//! @author 	深草直斗
//__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/

// 多重インクルードの防止 =========================================================
#pragma once



// ヘッダファイルの読み込み =======================================================
// <標準ヘッダファイル>
#include <memory>


// 名前空間の定義 ================================================================
namespace Library
{
	namespace Utility
	{
		// 構造体の定義 ==========================================================
		struct BinaryData
		{
			// <変数>
			// データ
			std::unique_ptr<char[]> data = nullptr;
			// サイズ
			unsigned int size = 0;


			// <ゲッター関数>
			inline char* GetData() const { return data.get(); }
		};


		// 関数の宣言 ============================================================
		//------------------------------------------------------------------
		//! @summary   バイナリファイルの読み込み
		//!
		//! @parameter [fileName] 読み込むファイル名
		//!
		//! @return    読み込んだバイナリデータ
		//------------------------------------------------------------------
		BinaryData LoadBinaryFile(const wchar_t* fileName);
	}
}
