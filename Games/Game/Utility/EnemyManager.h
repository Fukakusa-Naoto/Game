//__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/
//! @file		EnemyManager.h
//!
//! @summary	モトスの敵管理クラスのヘッダファイル
//!
//! @date		2018.12.10
//!
//! @author		深草直斗
//__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/

// 多重インクルードの防止 =========================================================
#pragma once



// ヘッダファイルの読み込み =======================================================
// <標準ヘッダファイル>
#include <list>

// <自作ヘッダファイル>
#include "../../Library/System/GameObject.h"


// 名前空間の定義 ================================================================
namespace Motos
{
	// クラスの宣言 ==============================================================
	namespace Play
	{
		namespace Object
		{
			namespace Enemy
			{
				class Enemy;
			}
		}
	}


	namespace Utility
	{
		// クラスの宣言 ==========================================================
		// タスクマネージャー
		class TaskManager;


		// クラスの定義 ==========================================================
		class EnemyManager
		{
			// <メンバ変数>
		private:
			// 生成したタイルの保存用コンテナ
			std::list<Play::Object::Enemy::Enemy*> m_enemyList;
			// 現在生存している敵の数
			int m_enemyCount;


			// <コンストラクタ>
		public:
			//--------------------------------------------------------------
			//! @parameter [void] なし
			//--------------------------------------------------------------
			EnemyManager();


			// <デストラクタ>
		public:
			~EnemyManager();


			// <メンバ関数>
		public:
			//--------------------------------------------------------------
			//! @summary   敵の作成処理
			//!
			//! @parameter [camera] カメラ
			//! @parameter [taskManager] タスクマネージャー
			//! @parameter [target] ターゲットの情報
			//!
			//! @return    なし
			//--------------------------------------------------------------
			void Create(Library::Camera::Camera* camera, TaskManager* taskManager, Library::System::GameObject* target);


			//--------------------------------------------------------------
			//! @summary   現在生存している敵の数を減らす
			//!
			//! @parameter [void] なし
			//!
			//! @return    なし
			//--------------------------------------------------------------
			void SubCount();


			// <ゲッター関数>
		public:
			//--------------------------------------------------------------
			//! @summary   現在生存している敵の数の取得
			//--------------------------------------------------------------
			inline int GetEnemyCount() const { return m_enemyCount; }
		};
	}
}
