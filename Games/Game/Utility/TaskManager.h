//__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/
//! @file		TaskManager.h
//!
//! @summary	モトスのタスク管理クラスのヘッダファイル
//!
//! @date		2018.11.14
//!
//! @author		深草直斗
//__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/

// 多重インクルードの防止 =========================================================
#pragma once



// ヘッダファイルの読み込み =======================================================
// <標準ヘッダファイル>
#include <list>

// <自作ヘッダーファイル>
#include "../../Library/System/GameObject.h"


// 名前空間の定義 ================================================================
namespace Motos
{
	namespace Utility
	{
		// クラスの定義 ==========================================================
		class TaskManager
		{
			// <メンバ変数>
		private:
			// 登録したタスクを管理するコンテナ
			std::list<Library::System::GameObject*> m_taskList;


			// <コンストラクタ>
		public:
			//--------------------------------------------------------------
			//! @parameter [void] なし
			//--------------------------------------------------------------
			TaskManager();


			// <デストラクタ>
		public:
			~TaskManager();


			// <メンバ関数>
		public:
			//--------------------------------------------------------------
			//! @summary   タスクの登録処理
			//!
			//! @parameter [task] 登録するタスク
			//!
			//! @return    なし
			//--------------------------------------------------------------
			void Entry(Library::System::GameObject* task);


			//--------------------------------------------------------------
			//! @summary   更新処理
			//!
			//! @parameter [timer] 時間情報
			//!
			//! @return    なし
			//--------------------------------------------------------------
			void Update(const Library::Common::StepTimer & timer);



			//--------------------------------------------------------------
			//! @summary   描画処理
			//!
			//! @parameter [void] なし
			//!
			//! @return    なし
			//--------------------------------------------------------------
			void Draw();
		};
	}
}
